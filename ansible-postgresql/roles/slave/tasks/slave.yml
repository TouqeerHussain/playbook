---
# - set_fact:
#       postgres_version: "{% if ansible_distribution_version == '14.04' %}9.3{% elif ansible_distribution_version == '16.04' %}9.5{% else %}''{% endif %}"

- include_vars: ../master/vars/vars.yml

#Remove existing datadir
- file: 
    path: /var/lib/postgresql/{{ postgres_version }}/main
    state: absent
    # recurse: yes
    
#Prepare initial bakup on the server
- name: Creating initial backups
  shell: "{{ item }}"
  environment:
    PGPASSWORD: "{{ repl_password }}"
  become: true
  become_user: postgres
  with_items:
    - pg_basebackup -h {{ hostvars[groups['master'][0]]['ansible_' + bind_interface]['ipv4']['address'] }}  -D /var/lib/postgresql/{{ postgres_version }}/main -U replicator
    - sleep 20
  register: shellout
- debug: var=shellout


#Set configuration for node
- name: Set the configuration file
  template: 
    src: templates/recovery.j2 
    dest: "/var/lib/postgresql/{{ postgres_version }}/main/recovery.conf"
    owner: postgres
    group: postgres

#Allow pgpool server to connect to slave
- lineinfile: dest=/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf line="host    postgres     pgpool     {{ hostvars[groups['pgpool'][0]]['ansible_' + bind_interface]['ipv4']['address'] }}/32   trust"

#Allow pgpool server to connect to master
- lineinfile: dest=/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf line="host    all     all     {{ hostvars[groups['pgpool'][0]]['ansible_' + bind_interface]['ipv4']['address'] }}/32   md5"

#restart postgres service for change
- name: check the service started
  service: name=postgresql  state=restarted
